## 30_fix_memory_limit collected by Jan Wagner <waja@cyconet.org>
## taken from upstream SCM

From a97451f504bd41db897cea6a93e557664b535f8b Mon Sep 17 00:00:00 2001
From: Stefan Esser <stefan.esser@sektioneins.de>
Date: Tue, 11 Feb 2014 12:40:38 +0100
Subject: [PATCH] Fix year and some memory limit code

diff --git a/memory_limit.c b/memory_limit.c
index 9088e95..5dc20ce 100644
--- a/memory_limit.c
+++ b/memory_limit.c
@@ -34,8 +34,11 @@
  */
 static PHP_INI_MH(suhosin_OnChangeMemoryLimit)
 {
-	long hard_memory_limit = 1<<30;
-	
+#if SIZEOF_LONG==8
+	long hard_memory_limit = 1<<63;
+#elif SIZEOF_LONG==4
+	long hard_memory_limit = 1<<31;
+#endif /* will produce a compile error or SIZEOF_LONG is not 4 or 8 */
 	if (stage == ZEND_INI_STAGE_RUNTIME) {
 		if (SUHOSIN_G(memory_limit) > 0) {
 			SUHOSIN_G(hard_memory_limit) = SUHOSIN_G(memory_limit);
@@ -50,13 +53,13 @@ static PHP_INI_MH(suhosin_OnChangeMemoryLimit)
 		PG(memory_limit) = zend_atol(new_value, new_value_length);
 		if (hard_memory_limit > 0) {
 			if (PG(memory_limit) > hard_memory_limit) {
-				suhosin_log(S_MISC, "script tried to increase memory_limit to %u bytes which is above the allowed value", PG(memory_limit));
+				suhosin_log(S_MISC, "script tried to increase memory_limit to %lu bytes which is above the allowed value", PG(memory_limit));
 				if (!SUHOSIN_G(simulation)) {
 					PG(memory_limit) = hard_memory_limit;
 					return FAILURE;
 				}
 			} else if (PG(memory_limit) < 0) {
-				suhosin_log(S_MISC, "script tried to disable memory_limit by setting it to a negative value %d bytes which is not allowed", PG(memory_limit));
+				suhosin_log(S_MISC, "script tried to disable memory_limit by setting it to a negative value %ld bytes which is not allowed", PG(memory_limit));
 				if (!SUHOSIN_G(simulation)) {
 					PG(memory_limit) = hard_memory_limit;
 					return FAILURE;
-- 
1.8.5.1

From d9819967e4848bcc4c22273a7778863da2b3f3f6 Mon Sep 17 00:00:00 2001
From: Stefan Esser <stefan.esser@sektioneins.de>
Date: Tue, 11 Feb 2014 12:41:40 +0100
Subject: [PATCH] Add some memory_limit tests

---
 tests/executor/memory_limit_64bit.phpt     | 43 ++++++++++++++++++++++++++++++
 tests/executor/memory_limit_64bit_10G.phpt | 36 +++++++++++++++++++++++++
 2 files changed, 79 insertions(+)
 create mode 100644 tests/executor/memory_limit_64bit.phpt
 create mode 100644 tests/executor/memory_limit_64bit_10G.phpt

diff --git a/tests/executor/memory_limit_64bit.phpt b/tests/executor/memory_limit_64bit.phpt
new file mode 100644
index 0000000..e7529e8
--- /dev/null
+++ b/tests/executor/memory_limit_64bit.phpt
@@ -0,0 +1,43 @@
+--TEST--
+memory_limit test: set suhosin hard_limit to normal limit (64 bit)
+--SKIPIF--
+<?php if (!function_exists("memory_get_usage")) print "skip PHP not compiled with memory_limit support"; 
+else if (PHP_INT_SIZE != 8) print "skip This is not a 64 bit system";
+?>
+--INI--
+memory_limit=16M
+suhosin.memory_limit=0
+suhosin.log.syslog=0
+suhosin.log.script=0
+suhosin.log.sapi=2
+--FILE--
+<?php
+    ini_set("memory_limit", "13M"); echo ini_get("memory_limit"), "\n";
+    ini_set("memory_limit", "14M"); echo ini_get("memory_limit"), "\n";
+    ini_set("memory_limit", "15M"); echo ini_get("memory_limit"), "\n";
+    ini_set("memory_limit", "16M"); echo ini_get("memory_limit"), "\n";
+    ini_set("memory_limit", "17M"); echo ini_get("memory_limit"), "\n";
+    ini_set("memory_limit", "18M"); echo ini_get("memory_limit"), "\n";
+    ini_set("memory_limit", "2G"); echo ini_get("memory_limit"), "\n";
+    ini_set("memory_limit", "3G"); echo ini_get("memory_limit"), "\n";
+    ini_set("memory_limit", "4G"); echo ini_get("memory_limit"), "\n";
+    ini_set("memory_limit", "5G"); echo ini_get("memory_limit"), "\n";
+?>
+--EXPECTF--
+13M
+14M
+15M
+16M
+ALERT - script tried to increase memory_limit to 17825792 bytes which is above the allowed value (attacker 'REMOTE_ADDR not set', file '%s', line 6)
+16M
+ALERT - script tried to increase memory_limit to 18874368 bytes which is above the allowed value (attacker 'REMOTE_ADDR not set', file '%s', line 7)
+16M
+ALERT - script tried to increase memory_limit to 2147483648 bytes which is above the allowed value (attacker 'REMOTE_ADDR not set', file '%s', line 8)
+16M
+ALERT - script tried to increase memory_limit to 3221225472 bytes which is above the allowed value (attacker 'REMOTE_ADDR not set', file '%s', line 9)
+16M
+ALERT - script tried to increase memory_limit to 0 bytes which is above the allowed value (attacker 'REMOTE_ADDR not set', file '%s', line 10)
+16M
+ALERT - script tried to increase memory_limit to 1073741824 bytes which is above the allowed value (attacker 'REMOTE_ADDR not set', file '%s', line 11)
+16M
+
diff --git a/tests/executor/memory_limit_64bit_10G.phpt b/tests/executor/memory_limit_64bit_10G.phpt
new file mode 100644
index 0000000..284db50
--- /dev/null
+++ b/tests/executor/memory_limit_64bit_10G.phpt
@@ -0,0 +1,36 @@
+--TEST--
+memory_limit test: set suhosin hard_limit to normal limit (64 bit) - 10 GB
+--SKIPIF--
+<?php if (!function_exists("memory_get_usage")) print "skip PHP not compiled with memory_limit support"; 
+else if (PHP_INT_SIZE != 8) print "skip This is not a 64 bit system";
+?>
+--INI--
+memory_limit=10G
+suhosin.memory_limit=0
+suhosin.log.syslog=0
+suhosin.log.script=0
+suhosin.log.sapi=2
+--FILE--
+<?php
+    ini_set("memory_limit", "13M"); echo ini_get("memory_limit"), "\n";
+    ini_set("memory_limit", "14M"); echo ini_get("memory_limit"), "\n";
+    ini_set("memory_limit", "15M"); echo ini_get("memory_limit"), "\n";
+    ini_set("memory_limit", "16M"); echo ini_get("memory_limit"), "\n";
+    ini_set("memory_limit", "17M"); echo ini_get("memory_limit"), "\n";
+    ini_set("memory_limit", "18M"); echo ini_get("memory_limit"), "\n";
+    ini_set("memory_limit", "2G"); echo ini_get("memory_limit"), "\n";
+    ini_set("memory_limit", "3G"); echo ini_get("memory_limit"), "\n";
+    ini_set("memory_limit", "4G"); echo ini_get("memory_limit"), "\n";
+    ini_set("memory_limit", "5G"); echo ini_get("memory_limit"), "\n";
+?>
+--EXPECTF--
+13M
+14M
+15M
+16M
+17M
+18M
+2G
+3G
+4G
+5G
-- 
1.8.5.1

From 42c620d0328867f31a9d33e827a31ca51f0dedb6 Mon Sep 17 00:00:00 2001
From: Stefan Esser <stefan.esser@sektioneins.de>
Date: Tue, 11 Feb 2014 12:46:04 +0100
Subject: [PATCH] Fix memory_limit testcase for 64 bit systems

---
 tests/executor/memory_limit_64bit.phpt | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/tests/executor/memory_limit_64bit.phpt b/tests/executor/memory_limit_64bit.phpt
index e7529e8..35be80b 100644
--- a/tests/executor/memory_limit_64bit.phpt
+++ b/tests/executor/memory_limit_64bit.phpt
@@ -36,8 +36,8 @@ ALERT - script tried to increase memory_limit to 2147483648 bytes which is above
 16M
 ALERT - script tried to increase memory_limit to 3221225472 bytes which is above the allowed value (attacker 'REMOTE_ADDR not set', file '%s', line 9)
 16M
-ALERT - script tried to increase memory_limit to 0 bytes which is above the allowed value (attacker 'REMOTE_ADDR not set', file '%s', line 10)
+ALERT - script tried to increase memory_limit to 4294967296 bytes which is above the allowed value (attacker 'REMOTE_ADDR not set', file '%s', line 10)
 16M
-ALERT - script tried to increase memory_limit to 1073741824 bytes which is above the allowed value (attacker 'REMOTE_ADDR not set', file '%s', line 11)
+ALERT - script tried to increase memory_limit to 5368709120 bytes which is above the allowed value (attacker 'REMOTE_ADDR not set', file '%s', line 11)
 16M
 
-- 
1.8.5.1

From 35b44afa2cd8bfc2a5ab66d08273e87a2da2d194 Mon Sep 17 00:00:00 2001
From: Stefan Esser <stefan.esser@sektioneins.de>
Date: Tue, 11 Feb 2014 14:05:28 +0100
Subject: [PATCH] Fix this to make the compiler happy

---
 memory_limit.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/memory_limit.c b/memory_limit.c
index 5dc20ce..6a6b975 100644
--- a/memory_limit.c
+++ b/memory_limit.c
@@ -35,9 +35,9 @@
 static PHP_INI_MH(suhosin_OnChangeMemoryLimit)
 {
 #if SIZEOF_LONG==8
-	long hard_memory_limit = 1<<63;
+	long hard_memory_limit = 0x7fffffffffffffff;
 #elif SIZEOF_LONG==4
-	long hard_memory_limit = 1<<31;
+	long hard_memory_limit = 0x7fffffff;
 #endif /* will produce a compile error or SIZEOF_LONG is not 4 or 8 */
 	if (stage == ZEND_INI_STAGE_RUNTIME) {
 		if (SUHOSIN_G(memory_limit) > 0) {
-- 
1.8.5.1

